<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mindskip.xzs.repository.CourseTeacherMapper">
  <resultMap id="BaseResultMap" type="com.mindskip.xzs.domain.CourseTeacher">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="course_id" jdbcType="BIGINT" property="courseId" />
    <result column="teacher_id" jdbcType="INTEGER" property="teacherId" />
    <result column="auth_type" jdbcType="INTEGER" property="authType" />
    <result column="creator_id" jdbcType="INTEGER" property="creatorId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  
  <resultMap id="CourseTeacherDTOMap" type="com.mindskip.xzs.domain.dto.CourseTeacherDTO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="auth_type" jdbcType="INTEGER" property="authType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  
  <sql id="Base_Column_List">
    id, course_id, teacher_id, auth_type, creator_id, create_time, update_time
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_course_teacher
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="selectByCourseIdAndTeacherId" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_course_teacher
    where course_id = #{courseId,jdbcType=BIGINT} and teacher_id = #{teacherId,jdbcType=INTEGER}
  </select>
  
  <select id="findCourseIdsByTeacherId" resultType="java.lang.Long">
    select 
      course_id
    from 
      t_course_teacher
    where 
      teacher_id = #{teacherId,jdbcType=INTEGER}
  </select>
  
  <select id="getCourseTeachers" resultMap="CourseTeacherDTOMap">
    SELECT 
      u.id, u.user_name, u.real_name, ct.auth_type, ct.create_time
    FROM 
      t_course_teacher ct
    JOIN 
      t_user u ON ct.teacher_id = u.id
    WHERE 
      ct.course_id = #{courseId,jdbcType=BIGINT}
    ORDER BY 
      ct.create_time DESC
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_course_teacher
    where id = #{id,jdbcType=BIGINT}
  </delete>
  
  <delete id="deleteByCourseIdAndTeacherId">
    delete from t_course_teacher
    where course_id = #{courseId,jdbcType=BIGINT} and teacher_id = #{teacherId,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.mindskip.xzs.domain.CourseTeacher" useGeneratedKeys="true" keyProperty="id">
    insert into t_course_teacher (course_id, teacher_id, auth_type, 
      creator_id, create_time, update_time)
    values (#{courseId,jdbcType=BIGINT}, #{teacherId,jdbcType=INTEGER}, #{authType,jdbcType=INTEGER}, 
      #{creatorId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  
  <insert id="insertSelective" parameterType="com.mindskip.xzs.domain.CourseTeacher" useGeneratedKeys="true" keyProperty="id">
    insert into t_course_teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="courseId != null">
        course_id,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="authType != null">
        auth_type,
      </if>
      <if test="creatorId != null">
        creator_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="courseId != null">
        #{courseId,jdbcType=BIGINT},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="authType != null">
        #{authType,jdbcType=INTEGER},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.mindskip.xzs.domain.CourseTeacher">
    update t_course_teacher
    <set>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=BIGINT},
      </if>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="authType != null">
        auth_type = #{authType,jdbcType=INTEGER},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.mindskip.xzs.domain.CourseTeacher">
    update t_course_teacher
    set course_id = #{courseId,jdbcType=BIGINT},
      teacher_id = #{teacherId,jdbcType=INTEGER},
      auth_type = #{authType,jdbcType=INTEGER},
      creator_id = #{creatorId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper> 